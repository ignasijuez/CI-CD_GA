apiVersion: apps/v1
kind: Deployment
metadata:
  name: github-mysql-deployment
  labels:
    app: mysql-ga
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-ga
  template:
    metadata:
      labels:
        app: mysql-ga
      annotations:
        pod-name: github-mysql-deployment
    spec:
      containers:
      - name: mysql-ga
        image: mysql:8.4  # The MySQL version
        ports:
        - containerPort: 3307
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: ""  # empty password as per docker-compose
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        - name: MYSQL_USER
          value: "petclinic"
        - name: MYSQL_PASSWORD
          value: "petclinic"
        - name: MYSQL_DATABASE
          value: "petclinic"
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc-ga
      - name: mysql-initdb
        hostPath:
          path: /Users/fish3418/TFG/github_cicd/CICD_test/src/main/resources/db/mysql_k8s
          type: Directory
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-ga
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-ga
  labels:
    app: mysql-ga
spec:
  ports:
    - port: 3307
  selector:
    app: mysql
  type: ClusterIP