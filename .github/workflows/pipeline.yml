name: Pipeline


#events
on:
  push:
    branches: [ "main" ]
    #when someone pushes to branch main it triggers this workflow
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4 #predefined action from the marketplace

    - name: Set up JDK 17 & Maven
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Check files
      run: ls -la

    - name: Start MySQL
      run: |
        docker ps
        #docker compose down
        echo 'Starting MySQL with Docker Compose...'
        docker compose up -d mysql
        docker ps
        echo "Waiting for MySQL to be ready..."
        #until [ "`docker inspect -f {{.State.Health.Status}} mysql_db`" == "healthy" ]; do
          sleep 5;
          #done

    - name: Check running containers
      run: docker ps

    - name: Check MySQL logs
      run: docker logs mysql_db

        # - name: Test MySQL Connection
        #run: |
        #echo 'Testing MySQL connection...'
        #docker exec mysql_db mysqladmin ping -h mysql_db

    # Run SQL scripts manually
    - name: Run MySQL initialization scripts
      run: docker exec -i mysql_db mysql -u root -e "source /docker-entrypoint-initdb.d/01_user.sql"
    - name: Run MySQL initialization scripts2
      run: docker exec -i mysql_db mysql -u root -e "source /docker-entrypoint-initdb.d/02_schema.sql"
    - name: Run MySQL initialization scripts3  
      run: docker exec -i mysql_db mysql -u root -e "source /docker-entrypoint-initdb.d/03_data.sql"

    - name: Check init files
      run: docker exec mysql_db ls /docker-entrypoint-initdb.d/

    - name: Check MySQL databases
      run: docker exec mysql_db mysql -u root -e "SHOW DATABASES;"

    - name: Check MySQL petclinic tables
      run: docker exec mysql_db mysql -u root -e "USE petclinic; SHOW TABLES; SELECT * FROM vets;"

    - name: Build
      run: |
        echo 'Clean and package the application'
        mvn spring-javaformat:apply
        mvn clean package -Dspring.datasource.url=jdbc:mysql://localhost/petclinic

    - name: Test
      run: mvn test

    - name: Deploy
      run: |
        echo 'Starting App with Docker Compose...'
        docker compose up --build -d
        echo 'Waiting for the application to start...'
        sleep 10

    - name: Check containers
      run: docker ps
